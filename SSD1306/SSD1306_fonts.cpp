#include "./SSD1306_fonts.hpp"

namespace SSD1306_fonts {

namespace Calibri12x12_def {
	static const uint8_t data[] = {
		0x02, 0x0C, 0x00, 0x00, 0x00, 0x00, // " "
		0x03, 0x0C, 0x00, 0x00, 0x7E, 0x03, 0x7E, 0x03, // "!"
		0x05, 0x0C, 0x0E, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x0E, 0x00, // """
		0x06, 0x0C, 0x90, 0x00, 0xD0, 0x03, 0xBC, 0x00, 0xD0, 0x03, 0xBC, 0x00, 0x90, 0x00, // "#"
		0x06, 0x0C, 0x18, 0x01, 0x3C, 0x02, 0x64, 0x06, 0x66, 0x02, 0xC4, 0x03, 0x88, 0x01, // "$"
		0x08, 0x0C, 0x18, 0x00, 0x24, 0x02, 0xA4, 0x01, 0x58, 0x00, 0xA0, 0x01, 0x58, 0x02, 0x44, 0x02, 0x80, 0x01, // "%"
		0x09, 0x0C, 0x00, 0x00, 0x80, 0x01, 0xD8, 0x03, 0x7C, 0x02, 0x64, 0x02, 0xFC, 0x02, 0x98, 0x01, 0xC0, 0x03, 0x00, 0x02, // "&"
		0x02, 0x0C, 0x0E, 0x00, 0x0E, 0x00, // "'"
		0x03, 0x0C, 0xF0, 0x01, 0xFC, 0x07, 0x06, 0x0C, // "("
		0x03, 0x0C, 0x06, 0x0C, 0xFC, 0x07, 0xF0, 0x01, // ")"
		0x05, 0x0C, 0x24, 0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x24, 0x00, // "*"
		0x05, 0x0C, 0x40, 0x00, 0x40, 0x00, 0xF0, 0x01, 0x40, 0x00, 0x40, 0x00, // "+"
		0x02, 0x0C, 0x00, 0x0F, 0x00, 0x07, // ","
		0x03, 0x0C, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, // "-"
		0x02, 0x0C, 0x00, 0x03, 0x00, 0x03, // "."
		0x06, 0x0C, 0x00, 0x0C, 0x00, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x0C, 0x00, 0x02, 0x00, // "/"
		0x06, 0x0C, 0xF8, 0x01, 0xFC, 0x03, 0x04, 0x02, 0x04, 0x02, 0xFC, 0x03, 0xF8, 0x01, // "0"
		0x06, 0x0C, 0x10, 0x02, 0x08, 0x02, 0xFC, 0x03, 0xFC, 0x03, 0x00, 0x02, 0x00, 0x02, // "1"
		0x06, 0x0C, 0x08, 0x02, 0x04, 0x03, 0x84, 0x03, 0xC4, 0x02, 0x7C, 0x02, 0x38, 0x02, // "2"
		0x06, 0x0C, 0x08, 0x01, 0x24, 0x02, 0x24, 0x02, 0x24, 0x02, 0xFC, 0x03, 0xD8, 0x01, // "3"
		0x06, 0x0C, 0xC0, 0x00, 0xB0, 0x00, 0x8C, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x80, 0x00, // "4"
		0x06, 0x0C, 0x3C, 0x01, 0x3C, 0x02, 0x24, 0x02, 0x24, 0x02, 0xE4, 0x03, 0xC4, 0x01, // "5"
		0x06, 0x0C, 0xF0, 0x01, 0xF8, 0x03, 0x2C, 0x02, 0x24, 0x02, 0xE4, 0x03, 0xC0, 0x01, // "6"
		0x06, 0x0C, 0x04, 0x00, 0x04, 0x03, 0xC4, 0x03, 0xF4, 0x00, 0x3C, 0x00, 0x0C, 0x00, // "7"
		0x06, 0x0C, 0xD8, 0x01, 0xFC, 0x03, 0x24, 0x02, 0x24, 0x02, 0xFC, 0x03, 0xD8, 0x01, // "8"
		0x06, 0x0C, 0x38, 0x02, 0x7C, 0x02, 0x44, 0x02, 0x44, 0x03, 0xFC, 0x01, 0xF8, 0x00, // "9"
		0x02, 0x0C, 0x30, 0x03, 0x30, 0x03, // ":"
		0x02, 0x0C, 0x30, 0x0F, 0x30, 0x07, // ";"
		0x05, 0x0C, 0x40, 0x00, 0xA0, 0x00, 0xA0, 0x00, 0x10, 0x01, 0x10, 0x01, // "<"
		0x05, 0x0C, 0xA0, 0x00, 0xA0, 0x00, 0xA0, 0x00, 0xA0, 0x00, 0xA0, 0x00, // "="
		0x05, 0x0C, 0x10, 0x01, 0x10, 0x01, 0xA0, 0x00, 0xA0, 0x00, 0x40, 0x00, // ">"
		0x05, 0x0C, 0x04, 0x00, 0x62, 0x03, 0x62, 0x03, 0x3E, 0x00, 0x1C, 0x00, // "?"
		0x0B, 0x0C, 0x00, 0x00, 0xE0, 0x01, 0x10, 0x02, 0xC8, 0x04, 0x24, 0x05, 0x14, 0x05, 0x94, 0x04, 0xE4, 0x05, 0x34, 0x01, 0x08, 0x01, 0xF0, 0x00, // "@"
		0x07, 0x0C, 0x80, 0x03, 0xF0, 0x03, 0xFC, 0x00, 0x8C, 0x00, 0xFC, 0x00, 0xF0, 0x03, 0x80, 0x03, // "A"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x24, 0x02, 0x24, 0x02, 0xFC, 0x03, 0xD8, 0x01, // "B"
		0x07, 0x0C, 0x00, 0x00, 0xF8, 0x01, 0xFC, 0x03, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x08, 0x01, // "C"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x04, 0x02, 0x04, 0x02, 0xFC, 0x03, 0xF8, 0x01, // "D"
		0x06, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x24, 0x02, 0x24, 0x02, 0x24, 0x02, // "E"
		0x06, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, // "F"
		0x07, 0x0C, 0x00, 0x00, 0xF8, 0x01, 0xFC, 0x03, 0x04, 0x02, 0x44, 0x02, 0xC4, 0x03, 0xC8, 0x03, // "G"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x20, 0x00, 0x20, 0x00, 0xFC, 0x03, 0xFC, 0x03, // "H"
		0x02, 0x0C, 0xFC, 0x03, 0xFC, 0x03, // "I"
		0x04, 0x0C, 0x00, 0x02, 0x00, 0x02, 0xFC, 0x03, 0xFC, 0x01, // "J"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x60, 0x00, 0xF8, 0x01, 0x9C, 0x03, 0x04, 0x02, // "K"
		0x06, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, // "L"
		0x0A, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x38, 0x00, 0xE0, 0x00, 0x80, 0x03, 0xE0, 0x00, 0x38, 0x00, 0xFC, 0x03, 0xFC, 0x03, // "M"
		0x08, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x18, 0x00, 0x60, 0x00, 0x80, 0x01, 0xFC, 0x03, 0xFC, 0x03, // "N"
		0x08, 0x0C, 0x00, 0x00, 0xF8, 0x01, 0xFC, 0x03, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0xFC, 0x03, 0xF8, 0x01, // "O"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00, 0x38, 0x00, // "P"
		0x09, 0x0C, 0x00, 0x00, 0xF8, 0x01, 0xFC, 0x03, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0xFC, 0x03, 0xF8, 0x05, 0x00, 0x04, // "Q"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x24, 0x00, 0x64, 0x00, 0xFC, 0x03, 0x98, 0x03, // "R"
		0x05, 0x0C, 0x38, 0x01, 0x7C, 0x02, 0x64, 0x02, 0xE4, 0x03, 0xC8, 0x01, // "S"
		0x06, 0x0C, 0x04, 0x00, 0x04, 0x00, 0xFC, 0x03, 0xFC, 0x03, 0x04, 0x00, 0x04, 0x00, // "T"
		0x07, 0x0C, 0x00, 0x00, 0xFC, 0x01, 0xFC, 0x03, 0x00, 0x02, 0x00, 0x02, 0xFC, 0x03, 0xFC, 0x01, // "U"
		0x07, 0x0C, 0x1C, 0x00, 0xFC, 0x00, 0xE0, 0x03, 0x00, 0x03, 0xE0, 0x03, 0xFC, 0x00, 0x1C, 0x00, // "V"
		0x0C, 0x0C, 0x0C, 0x00, 0x7C, 0x00, 0xF0, 0x03, 0x80, 0x03, 0xF0, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0xF0, 0x00, 0x80, 0x03, 0xF0, 0x03, 0x7C, 0x00, 0x0C, 0x00, // "W"
		0x07, 0x0C, 0x04, 0x02, 0x9C, 0x03, 0xF8, 0x01, 0x60, 0x00, 0xF8, 0x01, 0x9C, 0x03, 0x04, 0x02, // "X"
		0x06, 0x0C, 0x0C, 0x00, 0x3C, 0x00, 0xF0, 0x03, 0xF0, 0x03, 0x3C, 0x00, 0x0C, 0x00, // "Y"
		0x06, 0x0C, 0x04, 0x03, 0x84, 0x03, 0xE4, 0x02, 0x74, 0x02, 0x1C, 0x02, 0x0C, 0x02, // "Z"
		0x04, 0x0C, 0x00, 0x00, 0xFE, 0x0F, 0xFE, 0x0F, 0x02, 0x08, // "["
		0x06, 0x0C, 0x06, 0x00, 0x18, 0x00, 0x60, 0x00, 0x80, 0x01, 0x00, 0x06, 0x00, 0x08, // "\"
		0x03, 0x0C, 0x02, 0x08, 0xFE, 0x0F, 0xFE, 0x0F, // "]"
		0x06, 0x0C, 0x40, 0x00, 0x70, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x70, 0x00, 0x40, 0x00, // "^"
		0x06, 0x0C, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, // "_"
		0x03, 0x0C, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, // "`"
		0x05, 0x0C, 0x90, 0x01, 0xD0, 0x03, 0x50, 0x02, 0xF0, 0x03, 0xE0, 0x03, // "a"
		0x06, 0x0C, 0xFE, 0x03, 0xFE, 0x03, 0x10, 0x02, 0x10, 0x02, 0xF0, 0x03, 0xE0, 0x01, // "b"
		0x04, 0x0C, 0xE0, 0x01, 0xF0, 0x03, 0x10, 0x02, 0x10, 0x02, // "c"
		0x06, 0x0C, 0xE0, 0x01, 0xF0, 0x03, 0x10, 0x02, 0x10, 0x02, 0xFE, 0x03, 0xFE, 0x03, // "d"
		0x06, 0x0C, 0xE0, 0x01, 0xF0, 0x03, 0x50, 0x02, 0x50, 0x02, 0x70, 0x02, 0x60, 0x02, // "e"
		0x04, 0x0C, 0xFC, 0x03, 0xFE, 0x03, 0x12, 0x00, 0x02, 0x00, // "f"
		0x06, 0x0C, 0x60, 0x0D, 0xF0, 0x0F, 0x90, 0x0A, 0xF0, 0x0E, 0x70, 0x06, 0x10, 0x00, // "g"
		0x06, 0x0C, 0xFE, 0x03, 0xFE, 0x03, 0x10, 0x00, 0x10, 0x00, 0xF0, 0x03, 0xE0, 0x03, // "h"
		0x02, 0x0C, 0xF6, 0x03, 0xF6, 0x03, // "i"
		0x02, 0x0C, 0xF6, 0x0F, 0xF6, 0x07, // "j"
		0x05, 0x0C, 0xFE, 0x03, 0xFE, 0x03, 0xC0, 0x00, 0xF0, 0x03, 0x30, 0x03, // "k"
		0x02, 0x0C, 0xFE, 0x03, 0xFE, 0x03, // "l"
		0x0A, 0x0C, 0xF0, 0x03, 0xF0, 0x03, 0x10, 0x00, 0x10, 0x00, 0xF0, 0x03, 0xE0, 0x03, 0x10, 0x00, 0x10, 0x00, 0xF0, 0x03, 0xE0, 0x03, // "m"
		0x06, 0x0C, 0xF0, 0x03, 0xF0, 0x03, 0x10, 0x00, 0x10, 0x00, 0xF0, 0x03, 0xE0, 0x03, // "n"
		0x06, 0x0C, 0xE0, 0x01, 0xF0, 0x03, 0x10, 0x02, 0x10, 0x02, 0xF0, 0x03, 0xE0, 0x01, // "o"
		0x06, 0x0C, 0xF0, 0x0F, 0xF0, 0x0F, 0x10, 0x02, 0x10, 0x02, 0xF0, 0x03, 0xE0, 0x01, // "p"
		0x06, 0x0C, 0xE0, 0x01, 0xF0, 0x03, 0x10, 0x02, 0x10, 0x02, 0xF0, 0x0F, 0xF0, 0x0F, // "q"
		0x04, 0x0C, 0xF0, 0x03, 0xF0, 0x03, 0x10, 0x00, 0x10, 0x00, // "r"
		0x04, 0x0C, 0x60, 0x02, 0xF0, 0x02, 0xD0, 0x03, 0x90, 0x01, // "s"
		0x04, 0x0C, 0x10, 0x00, 0xFC, 0x01, 0xFC, 0x03, 0x10, 0x02, // "t"
		0x06, 0x0C, 0xF0, 0x01, 0xF0, 0x03, 0x00, 0x02, 0x00, 0x02, 0xF0, 0x03, 0xF0, 0x03, // "u"
		0x05, 0x0C, 0x70, 0x00, 0xF0, 0x03, 0x00, 0x03, 0xF0, 0x03, 0x70, 0x00, // "v"
		0x09, 0x0C, 0x70, 0x00, 0xF0, 0x03, 0x80, 0x03, 0xE0, 0x00, 0x30, 0x00, 0xE0, 0x00, 0x80, 0x03, 0xF0, 0x03, 0x70, 0x00, // "w"
		0x05, 0x0C, 0x30, 0x03, 0xF0, 0x03, 0xC0, 0x00, 0xF0, 0x03, 0x30, 0x03, // "x"
		0x05, 0x0C, 0x70, 0x00, 0xF0, 0x0D, 0x00, 0x0F, 0xF0, 0x03, 0x70, 0x00, // "y"
		0x04, 0x0C, 0x10, 0x03, 0xD0, 0x03, 0xF0, 0x02, 0x30, 0x02, // "z"
		0x04, 0x0C, 0x40, 0x00, 0xFC, 0x07, 0xBE, 0x0F, 0x02, 0x08, // "{"
		0x03, 0x0C, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x0F, // "|"
		0x04, 0x0C, 0x02, 0x08, 0xBE, 0x0F, 0xFC, 0x07, 0x40, 0x00, // "}"
		0x06, 0x0C, 0x10, 0x00, 0x08, 0x00, 0x08, 0x00, 0x10, 0x00, 0x10, 0x00, 0x08, 0x00, // "~"
	};
	static const uint16_t offsets[] = { 0, 6, 14, 26, 40, 54, 72, 92, 98, 106, 114, 126, 138, 144, 152, 158, 172, 186, 200, 214, 228, 242, 256, 270, 284, 298, 312, 318, 324, 336, 348, 360, 372, 396, 412, 428, 444, 460, 474, 488, 504, 520, 526, 536, 552, 566, 588, 606, 624, 640, 660, 676, 688, 702, 718, 734, 760, 776, 790, 804, 814, 828, 836, 850, 864, 872, 884, 898, 908, 922, 936, 946, 960, 974, 980, 986, 998, 1004, 1026, 1040, 1054, 1068, 1082, 1092, 1102, 1112, 1126, 1138, 1158, 1170, 1182, 1192, 1202, 1210, 1220, };
}

FontDef Calibri12x12 = {12, 12, Calibri12x12_def::data, Calibri12x12_def::offsets};

}
